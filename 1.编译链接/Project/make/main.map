
Allocating common symbols
Common symbol       size              file

Dccccccccccccccccccc
                    0x4               second.o
Accccccccccccccccccc
                    0x4               main.o

Discarded input sections

 .drectve       0x00000000       0x28 main.o
 .drectve       0x00000000       0x28 second.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00400000                __image_base__ = 0x400000
                0x00000000                __dll__ = 0x0
                0x00400000                ___ImageBase = 0x400000
                0x00001000                __section_alignment__ = 0x1000
                0x00000200                __file_alignment__ = 0x200
                0x00000004                __major_os_version__ = 0x4
                0x00000000                __minor_os_version__ = 0x0
                0x00000001                __major_image_version__ = 0x1
                0x00000000                __minor_image_version__ = 0x0
                0x00000004                __major_subsystem_version__ = 0x4
                0x00000000                __minor_subsystem_version__ = 0x0
                0x00000003                __subsystem__ = 0x3
                0x00200000                __size_of_stack_reserve__ = 0x200000
                0x00001000                __size_of_stack_commit__ = 0x1000
                0x00100000                __size_of_heap_reserve__ = 0x100000
                0x00001000                __size_of_heap_commit__ = 0x1000
                0x00000000                __loader_flags__ = 0x0
                0x00000000                __dll_characteristics__ = 0x0
LOAD main.o
LOAD first.o
LOAD second.o
                0x00000268                . = SIZEOF_HEADERS
                0x00001000                . = ALIGN (__section_alignment__)

.text           0x00401000      0x200
 *(.init)
 *(.text)
 .text          0x00401000       0x38 main.o
                0x00401000                main
 .text          0x00401038       0x1c first.o
                0x00401038                first
 .text          0x00401054       0x1c second.o
                0x00401054                second
 *(SORT_BY_NAME(.text$*))
 *(.text.*)
 *(.gnu.linkonce.t.*)
 *(.glue_7t)
 *(.glue_7)
                0x00401070                ___CTOR_LIST__ = .
                0x00401070                __CTOR_LIST__ = .
                0x00401070        0x4 LONG 0xffffffff
 *(.ctors)
 *(.ctor)
 *(SORT_BY_NAME(.ctors.*))
                0x00401074        0x4 LONG 0x0
                0x00401078                ___DTOR_LIST__ = .
                0x00401078                __DTOR_LIST__ = .
                0x00401078        0x4 LONG 0xffffffff
 *(.dtors)
 *(.dtor)
 *(SORT_BY_NAME(.dtors.*))
                0x0040107c        0x4 LONG 0x0
 *(.fini)
 *(.gcc_exc)
                [!provide]                PROVIDE (etext = .)
                [!provide]                PROVIDE (_etext = .)
 *(.gcc_except_table)

.data           0x00402000      0x200
                0x00402000                __data_start__ = .
 *(.data)
 .data          0x00402000        0x4 main.o
                0x00402000                Bccccccccccccccccccc
 .data          0x00402004        0x4 first.o
                0x00402004                Cccccccccccccccccccc
 .data          0x00402008        0x0 second.o
 *(.data2)
 *(SORT_BY_NAME(.data$*))
 *(.jcr)
                0x00402008                __data_end__ = .
 *(.data_cygwin_nocopy)

.rdata          0x00403000      0x200
 *(.rdata)
 .rdata         0x00403000       0x10 main.o
 .rdata         0x00403010        0x8 first.o
 .rdata         0x00403018        0x8 second.o
 *(SORT_BY_NAME(.rdata$*))
 .rdata$zzz     0x00403020       0x24 main.o
 .rdata$zzz     0x00403044       0x24 first.o
 .rdata$zzz     0x00403068       0x24 second.o
                0x0040308c                . = ALIGN (0x4)
                0x0040308c                __rt_psrelocs_start = .
 *(.rdata_runtime_pseudo_reloc)
                0x0040308c                __rt_psrelocs_end = .
                0x00000000                __rt_psrelocs_size = (__rt_psrelocs_end - __rt_psrelocs_start)
                0x0040308c                ___RUNTIME_PSEUDO_RELOC_LIST_END__ = .
                0x0040308c                __RUNTIME_PSEUDO_RELOC_LIST_END__ = .
                0x0040308c                ___RUNTIME_PSEUDO_RELOC_LIST__ = (. - __rt_psrelocs_size)
                0x0040308c                __RUNTIME_PSEUDO_RELOC_LIST__ = (. - __rt_psrelocs_size)

.eh_frame       0x00404000      0x200
 *(.eh_frame*)
 .eh_frame      0x00404000       0x38 main.o
 .eh_frame      0x00404038       0x38 first.o
 .eh_frame      0x00404070       0x38 second.o

.pdata
 *(.pdata*)

.bss            0x00405000        0x8
                0x00405000                __bss_start__ = .
 *(.bss)
 .bss           0x00405000        0x0 main.o
 .bss           0x00405000        0x0 first.o
 .bss           0x00405000        0x0 second.o
 *(COMMON)
 COMMON         0x00405000        0x4 main.o
                0x00405000                Accccccccccccccccccc
 COMMON         0x00405004        0x4 second.o
                0x00405004                Dccccccccccccccccccc
                0x00405008                __bss_end__ = .

.edata
 *(.edata)

/DISCARD/
 *(.debug$S)
 *(.debug$T)
 *(.debug$F)
 *(.drectve)
 *(.note.GNU-stack)
 *(.gnu.lto_*)

.idata          0x00406000      0x200
 SORT_BY_NAME(*)(.idata$2)
 SORT_BY_NAME(*)(.idata$3)
                0x00406000        0x4 LONG 0x0
                0x00406004        0x4 LONG 0x0
                0x00406008        0x4 LONG 0x0
                0x0040600c        0x4 LONG 0x0
                0x00406010        0x4 LONG 0x0
 SORT_BY_NAME(*)(.idata$4)
                0x00406014                __IAT_start__ = .
 SORT_BY_NAME(*)(.idata$5)
                0x00406014                __IAT_end__ = .
 SORT_BY_NAME(*)(.idata$6)
 SORT_BY_NAME(*)(.idata$7)

.CRT            0x00407000        0x0
                0x00407000                ___crt_xc_start__ = .
 *(SORT_BY_NAME(.CRT$XC*))
                0x00407000                ___crt_xc_end__ = .
                0x00407000                ___crt_xi_start__ = .
 *(SORT_BY_NAME(.CRT$XI*))
                0x00407000                ___crt_xi_end__ = .
                0x00407000                ___crt_xl_start__ = .
 *(SORT_BY_NAME(.CRT$XL*))
                0x00407000                ___crt_xp_start__ = .
 *(SORT_BY_NAME(.CRT$XP*))
                0x00407000                ___crt_xp_end__ = .
                0x00407000                ___crt_xt_start__ = .
 *(SORT_BY_NAME(.CRT$XT*))
                0x00407000                ___crt_xt_end__ = .

.tls            0x00407000        0x0
                0x00407000                ___tls_start__ = .
 *(.tls$AAA)
 *(.tls)
 *(.tls$)
 *(SORT_BY_NAME(.tls$*))
 *(.tls$ZZZ)
                0x00407000                ___tls_end__ = .

.endjunk        0x00407000        0x0
                [!provide]                PROVIDE (end = .)
                [!provide]                PROVIDE (_end = .)
                0x00407000                __end__ = .

.rsrc
 *(.rsrc)
 *(.rsrc$*)

.reloc
 *(.reloc)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug_aranges
 *(.debug_aranges)

.zdebug_aranges
 *(.zdebug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.zdebug_pubnames
 *(.zdebug_pubnames)

.debug_pubtypes
 *(.debug_pubtypes)

.zdebug_pubtypes
 *(.zdebug_pubtypes)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.zdebug_info
 *(.zdebug_info .zdebug.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.zdebug_abbrev
 *(.zdebug_abbrev)

.debug_line
 *(.debug_line)

.zdebug_line
 *(.zdebug_line)

.debug_frame
 *(.debug_frame*)

.zdebug_frame
 *(.zdebug_frame*)

.debug_str
 *(.debug_str)

.zdebug_str
 *(.zdebug_str)

.debug_loc
 *(.debug_loc)

.zdebug_loc
 *(.zdebug_loc)

.debug_macinfo
 *(.debug_macinfo)

.zdebug_macinfo
 *(.zdebug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.zdebug_weaknames
 *(.zdebug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.zdebug_funcnames
 *(.zdebug_funcnames)

.debug_typenames
 *(.debug_typenames)

.zdebug_typenames
 *(.zdebug_typenames)

.debug_varnames
 *(.debug_varnames)

.zdebug_varnames
 *(.zdebug_varnames)

.debug_macro
 *(.debug_macro)

.zdebug_macro
 *(.zdebug_macro)

.debug_ranges
 *(.debug_ranges)

.zdebug_ranges
 *(.zdebug_ranges)

.debug_types
 *(.debug_types .gnu.linkonce.wt.*)

.zdebug_types
 *(.zdebug_types .gnu.linkonce.wt.*)

.debug_gdb_scripts
 *(.debug_gdb_scripts)

.zdebug_gdb_scripts
 *(.zdebug_gdb_scripts)
OUTPUT(main pei-i386)
